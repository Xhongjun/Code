package com.xgdfin.rpc.annotation;import com.xgdfin.rpc.RpcRequest;import java.lang.reflect.InvocationHandler;import java.lang.reflect.Method;/** Copyright (C) 2017  ShenZhen xinLianZhengXin Co.,Ltd All Rights Reserved.* 未经本公司正式书面同意，其他任何个人、团体不得使用、复制、修改或发布本软件.* 版权所有深圳市信联征信有限公司 http://www.credlink.com/*/public class RpcClientInvocationHandler implements InvocationHandler {    private String host;    private Integer port;    public RpcClientInvocationHandler(String host, Integer port) {        this.host = host;        this.port = port;    }    @Override    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {        RpcRequest request = new RpcRequest();        request.setClazz(method.getDeclaringClass().getName());        request.setMethod(method.getName());        request.setArgesType(args);        request.setVersion("v1.0");        // 发送 socket 请求        RpcNetTransport transport = new RpcNetTransport(host, port);        return transport.send(request);    }}